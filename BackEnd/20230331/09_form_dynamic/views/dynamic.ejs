<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <!-- ajax 실습 위한 jQuery CDN -->
    <script
      src="https://code.jquery.com/jquery-3.6.4.min.js"
      integrity="sha256-oP6HI9z1XaZNBrJURtCoUT5SUnxFr8s3BzRl+cbzUq8="
      crossorigin="anonymous"
    ></script>
    <!-- axios 실습 위한 axios CDN -->
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <style>
      button:hover {
        background-color: greenyellow;
      }
    </style>
  </head>

  <body>
    <h1>동적 폼 전송 실습</h1>
    <!-- action을 주지 않는 이유는 페이지로 넘어가기때문에 (동기방식) -->
    <form name="register">
      <label for="name">이름</label>
      <input type="text" name="name" id="name" placeholder="홍길동" required />
      <br />

      <input type="radio" name="gender" value="남자" id="male" checked />
      <label for="male">남자</label>
      <input type="radio" name="gender" value="여자" id="female" />
      <label for="female">여자</label>
      <br />
      <br />
      <br />

      <button type="button" onclick="ajaxGet();">ajax get 버튼</button>
      <button type="button" onclick="ajaxPost();">ajax post 버튼</button>
      <button type="button" onclick="axiosGet();">axios get 버튼</button>
      <button type="button" onclick="axiosPost();">axios post 버튼</button>
      <button type="button" onclick="fetchGet();">fetch get 버튼</button>
      <button type="button" onclick="fetchPost();">fetch post 버튼</button>
    </form>
    <br />
    <div class="result"></div>

    <script>
      //버튼 실행 결과를 보여줄 요소 선택
      const resultBox = document.querySelector(".result");
      //1-1. ajax get 요청
      function ajaxGet() {
        console.log("click ajaxGet btn!!");

        //form 선택하기
        const form = document.forms["register"];

        //form 요소 값 확인
        console.dir(form); //console.dir 계층화해서 보여줌
        console.dir(form.name); //console.dir 키값들 보여줌
        console.dir(form.gender);
        console.dir(form.name.value); //입력값이 value로 보여줌
        console.dir(form.gender.value); //라디오 버튼 선택한 값

        //서버에 전송할 폼 입력값을 저장하는 객체
        const formInfo = {
          name: form.name.value,
          gender: form.gender.value,
        };
        $.ajax({
          url: "/ajax",
          type: "GET",
          data: formInfo,
          success: function (data) {
            console.log(data); //{name: 'www', gender: '여자'}
            resultBox.textContent = `GET /ajax 요청 완료! ${data.name}님은 ${data.gender}이시죠?`;
            resultBox.style.color = "blue";
          },
        });
      }
      //1-2. ajax post 요청
      function ajaxPost() {
        console.log("click ajaxPost btn!!");

        //form 선택하기
        const form = document.forms["register"];

        //form 요소 값 확인
        console.dir(form); //console.dir 계층화해서 보여줌
        console.dir(form.name); //console.dir 키값들 보여줌
        console.dir(form.gender);
        console.dir(form.name.value); //입력값이 value로 보여줌
        console.dir(form.gender.value); //라디오 버튼 선택한 값

        //서버에 전송할 폼 입력값을 저장하는 객체
        const formInfo = {
          name: form.name.value,
          gender: form.gender.value,
        };

        //ajax Post 요청 보내기
        $.ajax({
          url: "/ajax",
          type: "POST",
          data: formInfo,
          success: function (data) {
            console.log(data);
            resultBox.textContent = `POST /ajax 요청 완료! ${data.name}님은 ${data.gender}이시죠?`;
            resultBox.style.color = "red";
          },
        });
      }
      //2-1. axios get 요청
      async function axiosGet() {
        console.log("click axiosGet btn!!");
        //form 선택하기
        const form = document.forms["register"];

        //서버에 전송할 폼 입력값을 저장하는 객체
        const formInfo = {
          name: form.name.value,
          gender: form.gender.value,
        };
        //2-1-1. promise axios get 요청
        //axios는 결과로 promise 리턴
        //.then() 사용 가능
        //     axios({
        //       url: "/axios",
        //       method: "GET",
        //       params: formInfo, //GET 요청은 params에 저장, 데이터가 params로 변경됨
        //     })
        //       .then((response) => {
        //         //console.log(response); //객체 전체 반환
        //         console.log(response.data);
        //         resultBox.textContent = `GET /axios 요청 완료! ${response.data.name}님은 ${response.data.gender}이시죠?`;
        //         resultBox.style.color = "green";
        //       })
        //       .catch((error) => {
        //         console.log("Error!", error);
        //       });

        //2-1-2. async await axios get 요청
        try {
          const response = await axios({
            url: "/axios",
            method: "GET",
            params: formInfo, //GET 요청은 params에 저장, 데이터가 params로 변경됨
          });
          console.log(response);
          resultBox.textContent = `GET /axios 요청 완료! ${response.data.name}님은 ${response.data.gender}이시죠?`;
          resultBox.style.color = "green";
        } catch (error) {
          console.log("Error!", error);
        }
      }
      //2-2. axios post 요청
      async function axiosPost() {
        console.log("click axiosPost btn!!");
        console.log("click axiosGet btn!!");
        //form 선택하기
        const form = document.forms["register"];

        //서버에 전송할 폼 입력값을 저장하는 객체
        const formInfo = {
          name: form.name.value,
          gender: form.gender.value,
        };
        axios({
          url: "/axios",
          method: "POST",
          data: formInfo, //axios POST요청은 data 키값에 담아야함(<-> GET은 params)
        })
          .then((response) => {
            console.log(response);
            resultBox.textContent = `POST /axios 요청 완료! ${response.data.name}님은 ${response.data.gender}이시죠?`;
            resultBox.style.color = "gold";
          })
          .catch((error) => {
            console.log("Error!", error.message);
            resultBox.textContent = "알 수 없는 에러 발생";
          });
      }
      //3-1. fetch get 요청
      function fetchGet() {
        console.log("click fetchGet btn!!");
        const form = document.forms["register"];
        const ulrQuery = `?name=${form.name.value}&gender=${form.gender.value}`;
        //fetch(url,options)
        //ulrQuery가 data를 대신함
        fetch(`/fetch${ulrQuery}`, {
          method: "GET",
        })
          .then((response) => {
            console.log(response);
            //json 형식으로 도착하는 응답 ->js object로 파싱
            return response.json();
          }) // axios 보다 한단계 더 해야함
          .then((data) => {
            console.log("data>>>>", data); //{ name: 's', gender: '남자' }
            resultBox.textContent = `GET /fetch 요청 완료!! ${data.name}님은 ${data.gender}이시죠?`;
            resultBox.style.color = "limegreen";
          });
      }

      function fetchPost() {
        console.log("click fetchPost btn!!");

        const form = document.forms["register"];
        const formInfo = {
          name: form.name.value,
          gender: form.gender.value,
        };

        // fetch(url, options)
        fetch("/fetch", {
          method: "POST",
          // => POST 전송시에는 headers 옵션을 통해서 JSON 포맷을 사용함을 알려줘야 함.
          headers: {
            "Content-Type": "application/json",
          },
          // formInfo: 폼 요소에 입력된 값 정보
          // => JSON.stringify() : js object -> json
          body: JSON.stringify(formInfo),
        })
          .then(function (response) {
            console.log(response);
            // json 형식으로 도착하는 응답 -> js object로 파싱
            return response.json();
          })
          .then(function (data) {
            console.log(data); // { name: 'aa', gender: '여자' }
            resultBox.textContent = `POST /fetch 요청 완료!! 
          ${data.name}님은 ${data.gender}이시죠?ㅎㅎ`;
            resultBox.style.color = "hotpink";
          });
      }
    </script>
  </body>
</html>
