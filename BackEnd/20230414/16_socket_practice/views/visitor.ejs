<html lang="ko" class="h-100">
  <head>
    <%- include('include/include', { title: 'Community' })%>
    <style>
      form input {
        text-align: center !important;
      }
      .text-center {
        text-align: center !important;
      }
      table {
        text-align: center !important;
        color: white;
      }
    </style>
  </head>
  <body class="d-flex h-100 text-center text-bg-dark">
    <div class="cover-container d-flex w-100 h-100 p-3 mx-auto flex-column">
      <%- include('include/include_nav')%>
      <main class="px-3">
        <h2>방명록 등록</h2>
        <form name="visitor-form">
          <fieldset>
            <!-- <legend>방명록 등록</legend> -->
            <input type="text" id="name" value="<%=userid%>" disabled /> <br />
            <input type="text" id="comment" placeholder="방명록" /> <br />
            <div id="button-group">
              <button type="button" onclick="createVisitor();">등록</button>
            </div>
          </fieldset>
        </form>
        <br />

        <table class="table table-dark table-hover">
          <thead>
            <tr>
              <th>ID</th>
              <th>작성자</th>
              <th>방명록</th>
              <th>수정</th>
              <th>삭제</th>
            </tr>
          </thead>
          <tbody>
            <% for (let i = 0; i < data.length; i++) { %>
            <tr id="tr_<%= data[i].id %>">
              <td><%= data[i].id %></td>
              <td><%= data[i].name %></td>
              <td><%= data[i].comment %></td>
              <td>
                <button type="button" onclick="editVisitor(`<%=data[i].id %>`)">
                  수정
                </button>
              </td>
              <td>
                <!-- (4) 삭제 DELETE /visitor/delete-->
                <button
                  type="button"
                  onclick="deleteVisitor(this,`<%=data[i].id %>`,`<%=data[i].name %>`);"
                >
                  삭제
                </button>
              </td>
            </tr>
            <% } %>
          </tbody>
        </table>
      </main>
      <%- include('include/include_footer')%>
    </div>

    <script>
      table = document.querySelector("table");
      table.scrollTop = table.scrollHeight;
      // 로그인 a태그 클래스 active
      document.querySelectorAll("a")[2].classList.add("active");
      // 홈 클래스 a태그 active 지우기
      for (let i of [0, 1])
        if (document.querySelectorAll("a")[i].classList.contains("active")) {
          document.querySelectorAll("a")[i].classList.remove("active");
        }

      const tbody = document.querySelector("tbody");
      const buttonGroup = document.querySelector("#button-group");

      //(3) 생성 POST /visitor/write
      // 폼 [등록] 버튼 클릭시
      // - 테이블 데이터 추가
      function createVisitor() {
        const form = document.forms["visitor-form"];

        axios({
          method: "POST",
          url: "/visitor/write",
          data: {
            name: form.name.value,
            comment: form.comment.value,
          },
        }).then((res) => {
          //새로 입력된 데이터만 확인
          console.log(res.data); // { id: n, name: 'xx', comment: 'yy' }
          // 새로고침 말고 html에 새로 입력된 데이터 추가
          const newVisitor = `
            <tr id="tr_${res.data.id}">
              <td>${res.data.id}</td>
              <td>${res.data.name}</td>
              <td>${res.data.comment}</td>
              <td><button type="button" onclick="editVisitor(${res.data.id})">수정</button></td>
              <td><button type="button" onclick="deleteVisitor(this,${res.data.id},'${res.data.name}')">삭제</button></td>
            </tr>`;

          // insertAdjacentHTML(): 특정 요소에 html 추가 , jQuery.append()와 동일
          // vs. innerHTML: 내부 코드 덮어씌움
          tbody.insertAdjacentHTML("beforeend", newVisitor);
        });
      }

      //(4) 삭제 DELETE /visitor/delete
      function deleteVisitor(obj, id, name) {
        console.log("obj", obj);
        console.log("id", id);
        console.log("name", name);
        //alert는 확인버튼만 confirm은 확인, 취소 버튼 2개
        // !false = true
        if ("<%=userid%>" === name) {
          if (!confirm("정말 삭제하시겠습니까?")) {
            return;
          }

          // confirm에서 [확인] 버튼 클릭 시 실행할 코드
          axios({
            method: "DELETE",
            url: "/visitor/delete",
            data: {
              id: id, //매개변수로 받고 있는 id
            },
          }).then((res) => {
            console.log(res.data); //삭제 성공!!
            console.log(`tr_${id}`);
            document.getElementById(`tr_${id}`).remove();

            //삭제하는 다른 방법
            //obj.parentElement.parentElement.remove();
            //obj.closest(`#tr_${id}`).remove(); //가장 가까운 선택자 찾아감
          });
        } else {
          alert("권한이 없습니다");
          const form = document.forms["visitor-form"];
          form.name.value = "<%=userid%>";
          form.comment.value = "";
        }
      }

      //(5) 수정  GET /visitor/get
      //(5)-1 클릭한 값 조회
      //(5)-2 form input 값 넣기
      //(5)-3 [변경], [취소] 버튼 보여주기
      function editVisitor(id) {
        console.log(id);

        axios({
          method: "GET",
          url: "/visitor/get",
          params: {
            id: id,
          },
        }).then((res) => {
          //(5)-1 클릭한 값 조회
          console.log(res.data); //rows[0] { id: 10, name: '아리수', comment: '22' }
          if ("<%=userid%>" === res.data.name) {
            //(5)-2 form input 값 넣기
            const form = document.forms["visitor-form"];
            form.name.value = res.data.name; //input[name='name']에 value 설정
            form.comment.value = res.data.comment; //input[name='comment']에 value 설정

            //(5)-3 [변경], [취소] 버튼 보여주기 (buttonGroup에 덮어씌움)
            const btns = `
            <button type='button' onclick='editDo(${id})'>변경</button>
            <button type='button' onclick='editCancel()'>취소</button>
            `;
            buttonGroup.innerHTML = btns;
          } else {
            alert("권한이 없습니다");
            form.name.value = "<%=userid%>";
            form.comment.value = "";
          }
        });
      }

      //(6) = (5)-4. [변경] 버튼 눌렀을 떄 데이터 수정
      //(6) 수정  PATCH  /visitor/edit
      async function editDo(id) {
        const form = document.forms["visitor-form"];
        //1.db 수정
        await axios({
          method: "PATCH",
          url: "/visitor/edit",
          data: {
            id: id,
            name: form.name.value,
            comment: form.comment.value,
          },
        }).then((res) => {
          //4-1. 수정성공 메세지 띄우기
          alert("수정완료");
          //4-2. 수정내용 반영
          const children = document.querySelector(`#tr_${id}`).children;
          // console.log(children); //[td, td, td, td, td]
          children[1].textContent = form.name.value;
          children[2].textContent = form.comment.value;
        });
        //TODO: 수정 이후 input 초기화 -> async await
        //2. input
        editCancel();
      }

      //(5)-5. [취소] 버튼 눌렀을 떄
      //(5)-5-1. input 초기화
      //(5)-5-2. [등록] 버튼 보이기
      function editCancel() {
        //5-1. input 초기화
        const form = document.forms["visitor-form"];
        // form.name.value = "";

        form.comment.value = "";

        //5-2. [등록] 버튼 보이기
        const btns = `<button type='button' onclick='createVisitor()'>등록</button>`;
        buttonGroup.innerHTML = btns;
      }
    </script>
  </body>
</html>
